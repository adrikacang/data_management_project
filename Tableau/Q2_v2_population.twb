<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='crime_areas_SY+ (Datamart_v3)' inline='true' name='federated.0maznrw0foamlw14srkjs1rkaap3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Datamart_v3' name='msaccess.08z9ser1ajkwxn1bwz7r811sab2a'>
            <connection authentication='no' class='msaccess' driver='Ace12' filename='C:/Users/Anna/My Documents/GitHub/data_management_project/Database/Datamart_v3_population.accdb' mdwpath='' server='' username='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[crime_areas_SY].[Area]' />
              <expression op='[Areas_Sheffield_Dem].[Area]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[crime_areas_SY].[TimeID]' />
                  <expression op='[DimTime].[TimeID]' />
                </expression>
                <expression op='='>
                  <expression op='[crime_areas_SY].[Year]' />
                  <expression op='[DimTime].[Year]' />
                </expression>
                <expression op='='>
                  <expression op='[crime_areas_SY].[Month]' />
                  <expression op='[DimTime].[Month]' />
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='AND'>
                  <expression op='='>
                    <expression op='[crime_areas_SY].[LSOAcode]' />
                    <expression op='[DimLocation].[LSOA Code]' />
                  </expression>
                  <expression op='='>
                    <expression op='[crime_areas_SY].[Area]' />
                    <expression op='[DimLocation].[Area]' />
                  </expression>
                  <expression op='='>
                    <expression op='[crime_areas_SY].[City]' />
                    <expression op='[DimLocation].[City]' />
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[crime_areas_SY].[Crimetype]' />
                    <expression op='[DimCrime].[CrimeType]' />
                  </expression>
                </clause>
                <relation connection='msaccess.08z9ser1ajkwxn1bwz7r811sab2a' name='crime_areas_SY' table='[crime_areas_SY]' type='table' />
                <relation connection='msaccess.08z9ser1ajkwxn1bwz7r811sab2a' name='DimCrime' table='[DimCrime]' type='table' />
              </relation>
              <relation connection='msaccess.08z9ser1ajkwxn1bwz7r811sab2a' name='DimLocation' table='[DimLocation]' type='table' />
            </relation>
            <relation connection='msaccess.08z9ser1ajkwxn1bwz7r811sab2a' name='DimTime' table='[DimTime]' type='table' />
          </relation>
          <relation connection='msaccess.08z9ser1ajkwxn1bwz7r811sab2a' name='Areas_Sheffield_Dem' table='[Areas_Sheffield_Dem]' type='table' />
        </relation>
        <cols>
          <map key='[Area (Areas_Sheffield_Dem)]' value='[Areas_Sheffield_Dem].[Area]' />
          <map key='[Area (DimLocation)]' value='[DimLocation].[Area]' />
          <map key='[Area]' value='[crime_areas_SY].[Area]' />
          <map key='[City (DimLocation)]' value='[DimLocation].[City]' />
          <map key='[City]' value='[crime_areas_SY].[City]' />
          <map key='[CrimeID (DimCrime)]' value='[DimCrime].[CrimeID]' />
          <map key='[CrimeID]' value='[crime_areas_SY].[CrimeID]' />
          <map key='[CrimeType]' value='[DimCrime].[CrimeType]' />
          <map key='[Crimetype]' value='[crime_areas_SY].[Crimetype]' />
          <map key='[Households]' value='[Areas_Sheffield_Dem].[Households]' />
          <map key='[ID]' value='[Areas_Sheffield_Dem].[ID]' />
          <map key='[LSOA Code]' value='[DimLocation].[LSOA Code]' />
          <map key='[LSOAcode]' value='[crime_areas_SY].[LSOAcode]' />
          <map key='[LSOAname]' value='[crime_areas_SY].[LSOAname]' />
          <map key='[Lastoutcomecategory]' value='[crime_areas_SY].[Lastoutcomecategory]' />
          <map key='[Latitude]' value='[crime_areas_SY].[Latitude]' />
          <map key='[Location]' value='[crime_areas_SY].[Location]' />
          <map key='[Longitude]' value='[crime_areas_SY].[Longitude]' />
          <map key='[Month (DimTime)]' value='[DimTime].[Month]' />
          <map key='[Month]' value='[crime_areas_SY].[Month]' />
          <map key='[Population]' value='[Areas_Sheffield_Dem].[Population]' />
          <map key='[Sq area]' value='[Areas_Sheffield_Dem].[Sq area]' />
          <map key='[TimeID (DimTime)]' value='[DimTime].[TimeID]' />
          <map key='[TimeID]' value='[crime_areas_SY].[TimeID]' />
          <map key='[X1]' value='[crime_areas_SY].[X1]' />
          <map key='[Year (DimTime)]' value='[DimTime].[Year]' />
          <map key='[Year]' value='[crime_areas_SY].[Year]' />
          <map key='[id (DimCrime)]' value='[DimCrime].[id]' />
          <map key='[id (DimLocation)]' value='[DimLocation].[id]' />
          <map key='[id (DimTime)]' value='[DimTime].[id]' />
          <map key='[id]' value='[crime_areas_SY].[id]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrimeID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CrimeID]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>CrimeID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crimetype</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Crimetype]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Crimetype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lastoutcomecategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Lastoutcomecategory]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Lastoutcomecategory</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LSOAcode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LSOAcode]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>LSOAcode</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LSOAname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LSOAname]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>LSOAname</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TimeID]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>TimeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X1]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>X1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[crime_areas_SY]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrimeID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CrimeID (DimCrime)]</local-name>
            <parent-name>[DimCrime]</parent-name>
            <remote-alias>CrimeID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrimeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CrimeType]</local-name>
            <parent-name>[DimCrime]</parent-name>
            <remote-alias>CrimeType</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (DimCrime)]</local-name>
            <parent-name>[DimCrime]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (DimLocation)]</local-name>
            <parent-name>[DimLocation]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (DimLocation)]</local-name>
            <parent-name>[DimLocation]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (DimLocation)]</local-name>
            <parent-name>[DimLocation]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LSOA Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LSOA Code]</local-name>
            <parent-name>[DimLocation]</parent-name>
            <remote-alias>LSOA Code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id (DimTime)]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Month (DimTime)]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TimeID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TimeID (DimTime)]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>TimeID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year (DimTime)]</local-name>
            <parent-name>[DimTime]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area (Areas_Sheffield_Dem)]</local-name>
            <parent-name>[Areas_Sheffield_Dem]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Households</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Households]</local-name>
            <parent-name>[Areas_Sheffield_Dem]</parent-name>
            <remote-alias>Households</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Areas_Sheffield_Dem]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Areas_Sheffield_Dem]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sq area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sq area]</local-name>
            <parent-name>[Areas_Sheffield_Dem]</parent-name>
            <remote-alias>Sq area</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area (Areas Sheffield Dem)' datatype='string' name='[Area (Areas_Sheffield_Dem)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
          <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
          <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
          <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
          <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
          <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
          <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
          <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
          <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
          <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
          <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
          <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
          <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
          <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
          <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
          <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
          <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
          <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
          <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
          <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
          <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
          <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
          <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
          <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
          <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
          <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
          <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
          <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
          <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
          <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
          <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
          <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
          <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
          <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
          <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
          <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
          <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
          <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
          <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
          <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
          <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
          <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
          <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
          <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
          <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Area (DimLocation)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
          <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
          <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
          <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
          <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
          <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
          <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
          <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
          <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
          <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
          <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
          <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
          <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
          <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
          <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
          <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
          <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
          <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
          <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
          <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
          <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
          <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
          <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
          <semantic-value key='&quot;Woodhouse&quot;' value='53.372945000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
          <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
          <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
          <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
          <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
          <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
          <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
          <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
          <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
          <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
          <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
          <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
          <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
          <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
          <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
          <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
          <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
          <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
          <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
          <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
          <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
          <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
          <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
          <semantic-value key='&quot;Woodhouse&quot;' value='-1.387972' />
        </semantic-values>
      </column>
      <column datatype='string' default-role='measure' default-type='quantitative' name='[Area]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City (DimLocation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' default-role='measure' default-type='quantitative' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[CrimeID (DimCrime)]' role='dimension' type='ordinal' />
      <column caption='Crime ID' datatype='string' default-role='measure' default-type='quantitative' name='[CrimeID]' role='dimension' type='nominal' />
      <column datatype='string' name='[CrimeType]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column caption='LSO Acode' datatype='string' default-role='measure' default-type='quantitative' name='[LSOAcode]' role='dimension' type='nominal' />
      <column caption='LSO Aname' datatype='string' default-role='measure' default-type='quantitative' name='[LSOAname]' role='dimension' type='nominal' />
      <column datatype='string' default-role='measure' default-type='quantitative' name='[Lastoutcomecategory]' role='dimension' type='nominal' />
      <column datatype='real' name='[Latitude]' role='measure' semantic-role='[City].[Name]' type='quantitative' />
      <column datatype='real' name='[Longitude]' role='measure' semantic-role='[City].[Name]' type='quantitative' />
      <column datatype='integer' datatype-customized='true' name='[Month (DimTime)]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Month]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' datatype-customized='true' name='[TimeID (DimTime)]' role='dimension' type='ordinal' />
      <column caption='Time ID' datatype='string' default-role='measure' default-type='quantitative' name='[TimeID]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year (DimTime)]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Year]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' default-role='measure' default-type='quantitative' name='[id]' role='dimension' type='nominal' />
      <column-instance column='[Area (DimLocation)]' derivation='None' name='[none:Area (DimLocation):nk]' pivot='key' type='nominal' />
      <column-instance column='[City (DimLocation)]' derivation='None' name='[none:City (DimLocation):nk]' pivot='key' type='nominal' />
      <column-instance column='[CrimeType]' derivation='None' name='[none:CrimeType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Lastoutcomecategory]' derivation='None' name='[none:Lastoutcomecategory:nk]' pivot='key' type='nominal' />
      <column-instance column='[TimeID (DimTime)]' derivation='None' name='[none:TimeID (DimTime):ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Area (DimLocation),City (DimLocation),Crime Type,Lastoutcomecategory,TimeID (DimTime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Area (DimLocation):nk]' />
          <groupfilter function='level-members' level='[none:City (DimLocation):nk]' />
          <groupfilter function='level-members' level='[none:Crime Type:nk]' />
          <groupfilter function='level-members' level='[none:Lastoutcomecategory:nk]' />
          <groupfilter function='level-members' level='[none:TimeID (DimTime):ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Area (DimLocation), City (DimLocation)'>
          <field>[City (DimLocation)]</field>
          <field>[Area (DimLocation)]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.500931' measure-ordering='alphabetic' measure-percentage='0.499069' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City (DimLocation):nk]&#10;[none:Area (DimLocation):nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Beauchief and Greenhill&quot;</bucket>
              </multibucket>
            </map>
            <map to='#24b28e'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Burngreave&quot;</bucket>
              </multibucket>
            </map>
            <map to='#27aa71'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;City&quot;</bucket>
              </multibucket>
            </map>
            <map to='#27b0c2'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Beighton&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2fbaa9'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Broomhill and Sharrow Vale&quot;</bucket>
              </multibucket>
            </map>
            <map to='#33bdbe'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Birley&quot;</bucket>
              </multibucket>
            </map>
            <map to='#38a452'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Crookes and Crosspool&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4f7cba'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Woodhouse&quot;</bucket>
              </multibucket>
            </map>
            <map to='#52a238'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Darnall&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6b76be'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;West Ecclesfield&quot;</bucket>
              </multibucket>
            </map>
            <map to='#87af2d'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Dore and Totley&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8870c2'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Walkley&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a76dc2'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Stocksbridge and Upper Don&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bcbd22'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;East Ecclesfield&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c66abf'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Stannington&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d6bb21'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Ecclesall&quot;</bucket>
              </multibucket>
            </map>
            <map to='#de6db9'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Southey&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e1312e'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Manor Castle&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e74b21'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Hillsborough&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ea3648'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Mosborough&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f075b0'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Shiregreen and Brightside&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1b921'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Firth Park&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f26f17'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Graves Park&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f43c63'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Nether Edge and Sharrow&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f85882'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Park and Arbourthorne&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f88d16'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Gleadless Valley&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f8a61c'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Fulwood&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc74a2'>
              <multibucket>
                <bucket>&quot;Sheffield&quot;</bucket>
                <bucket>&quot;Richmond&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CrimeType:nk]' palette='gray_10_0' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;Violence and sexual offences&quot;</bucket>
            </map>
            <map to='#525c67'>
              <bucket>&quot;Vehicle crime&quot;</bucket>
            </map>
            <map to='#5a6570'>
              <bucket>&quot;Theft from the person&quot;</bucket>
            </map>
            <map to='#636f79'>
              <bucket>&quot;Shoplifting&quot;</bucket>
            </map>
            <map to='#6d7980'>
              <bucket>&quot;Robbery&quot;</bucket>
            </map>
            <map to='#778389'>
              <bucket>&quot;Public order&quot;</bucket>
            </map>
            <map to='#828d91'>
              <bucket>&quot;Possession of weapons&quot;</bucket>
            </map>
            <map to='#8d979a'>
              <bucket>&quot;Other theft&quot;</bucket>
            </map>
            <map to='#99a1a2'>
              <bucket>&quot;Other crime&quot;</bucket>
            </map>
            <map to='#a5abac'>
              <bucket>&quot;Drugs&quot;</bucket>
            </map>
            <map to='#b1b5b5'>
              <bucket>&quot;Criminal damage and arson&quot;</bucket>
            </map>
            <map to='#bdbfbf'>
              <bucket>&quot;Burglary&quot;</bucket>
            </map>
            <map to='#c9cbca'>
              <bucket>&quot;Bicycle theft&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Anti-social behaviour&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Area (DimLocation):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dore and Totley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beauchief and Greenhill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burngreave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stocksbridge and Upper Don&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Ecclesfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Walkley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nether Edge and Sharrow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beighton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shiregreen and Brightside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manor Castle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crookes and Crosspool&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Ecclesfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gleadless Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Graves Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mosborough&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park and Arbourthorne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ecclesall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darnall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodhouse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Birley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Firth Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broomhill and Sharrow Vale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stannington&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2015-18 Area Type of Crime Table by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_areas_SY+ (Datamart_v3)' name='federated.0maznrw0foamlw14srkjs1rkaap3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0maznrw0foamlw14srkjs1rkaap3'>
            <column datatype='string' name='[Area (DimLocation)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
                <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
                <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
                <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
                <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
                <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
                <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
                <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
                <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
                <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
                <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
                <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
                <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
                <semantic-value key='&quot;Woodhouse&quot;' value='53.372945000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
                <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
                <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
                <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
                <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
                <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
                <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
                <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
                <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
                <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
                <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
                <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
                <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
                <semantic-value key='&quot;Woodhouse&quot;' value='-1.387972' />
              </semantic-values>
            </column>
            <column datatype='string' name='[City (DimLocation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[CrimeType]' role='dimension' type='nominal' />
            <column datatype='string' name='[Crimetype]' role='dimension' type='nominal' />
            <column datatype='integer' datatype-customized='true' name='[Month (DimTime)]' role='dimension' type='ordinal' />
            <column datatype='date' datatype-customized='true' name='[TimeID (DimTime)]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Year (DimTime)]' role='dimension' type='ordinal' />
            <column-instance column='[Area (DimLocation)]' derivation='Attribute' name='[attr:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Area (DimLocation)]' derivation='Count' name='[cnt:Area (DimLocation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TimeID (DimTime)]' derivation='Month' name='[mn:TimeID (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area (DimLocation)]' derivation='None' name='[none:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[City (DimLocation)]' derivation='None' name='[none:City (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[CrimeType]' derivation='None' name='[none:CrimeType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month (DimTime)]' derivation='None' name='[none:Month (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[TimeID (DimTime)]' derivation='None' name='[none:TimeID (DimTime):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (DimTime)]' derivation='None' name='[none:Year (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Crimetype]' derivation='Count' name='[pcto:cnt:Crimetype:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beauchief and Greenhill&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beighton&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Birley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Broomhill and Sharrow Vale&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Burngreave&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;City&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Crookes and Crosspool&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Darnall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Dore and Totley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;East Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Ecclesall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Firth Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Fulwood&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Gleadless Valley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Graves Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Hillsborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Manor Castle&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Mosborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Nether Edge and Sharrow&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Park and Arbourthorne&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Shiregreen and Brightside&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Southey&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stannington&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stocksbridge and Upper Don&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Walkley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;West Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Woodhouse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]'>
            <groupfilter function='member' level='[none:City (DimLocation):nk]' member='&quot;Sheffield&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Anti-social behaviour&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Bicycle theft&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Burglary&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Criminal damage and arson&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Drugs&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Other crime&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Other theft&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Possession of weapons&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Public order&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Robbery&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Shoplifting&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Theft from the person&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Vehicle crime&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Violence and sexual offences&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='1' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='2' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='3' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='4' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='5' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='6' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='7' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='8' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='9' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='10' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='11' />
              <groupfilter function='member' level='[none:Month (DimTime):ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:TimeID (DimTime):qk]' included-values='in-range'>
            <min>#2015-01-01#</min>
            <max>#2018-12-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2015' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2016' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2017' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:TimeID (DimTime):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]' />
              <text column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:2]</rows>
        <cols>([federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok] / [federated.0maznrw0foamlw14srkjs1rkaap3].[mn:TimeID (DimTime):ok])</cols>
      </table>
      <simple-id uuid='{9B06629A-951C-4B5C-9105-E2076ADFCE97}' />
    </worksheet>
    <worksheet name='2015-18 crime by area'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_areas_SY+ (Datamart_v3)' name='federated.0maznrw0foamlw14srkjs1rkaap3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0maznrw0foamlw14srkjs1rkaap3'>
            <column datatype='string' name='[Area (DimLocation)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
                <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
                <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
                <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
                <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
                <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
                <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
                <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
                <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
                <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
                <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
                <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
                <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
                <semantic-value key='&quot;Woodhouse&quot;' value='53.372945000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
                <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
                <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
                <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
                <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
                <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
                <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
                <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
                <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
                <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
                <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
                <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
                <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
                <semantic-value key='&quot;Woodhouse&quot;' value='-1.387972' />
              </semantic-values>
            </column>
            <column datatype='string' name='[City (DimLocation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[CrimeType]' role='dimension' type='nominal' />
            <column datatype='string' name='[Crimetype]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year (DimTime)]' role='dimension' type='ordinal' />
            <column-instance column='[Area (DimLocation)]' derivation='Attribute' name='[attr:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Area (DimLocation)]' derivation='Count' name='[cnt:Area (DimLocation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area (DimLocation)]' derivation='None' name='[none:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[City (DimLocation)]' derivation='None' name='[none:City (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[CrimeType]' derivation='None' name='[none:CrimeType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (DimTime)]' derivation='None' name='[none:Year (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Crimetype]' derivation='Count' name='[pcto:cnt:Crimetype:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beauchief and Greenhill&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beighton&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Birley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Broomhill and Sharrow Vale&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Burngreave&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;City&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Crookes and Crosspool&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Darnall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Dore and Totley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;East Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Ecclesall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Firth Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Fulwood&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Gleadless Valley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Graves Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Hillsborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Manor Castle&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Mosborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Nether Edge and Sharrow&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Park and Arbourthorne&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Shiregreen and Brightside&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Southey&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stannington&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stocksbridge and Upper Don&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Walkley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;West Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Woodhouse&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Fulwood&quot;</bucket>
              <bucket>&quot;Crookes and Crosspool&quot;</bucket>
              <bucket>&quot;Dore and Totley&quot;</bucket>
              <bucket>&quot;Stannington&quot;</bucket>
              <bucket>&quot;Ecclesall&quot;</bucket>
              <bucket>&quot;West Ecclesfield&quot;</bucket>
              <bucket>&quot;Stocksbridge and Upper Don&quot;</bucket>
              <bucket>&quot;Beighton&quot;</bucket>
              <bucket>&quot;Graves Park&quot;</bucket>
              <bucket>&quot;Mosborough&quot;</bucket>
              <bucket>&quot;Birley&quot;</bucket>
              <bucket>&quot;Richmond&quot;</bucket>
              <bucket>&quot;East Ecclesfield&quot;</bucket>
              <bucket>&quot;Beauchief and Greenhill&quot;</bucket>
              <bucket>&quot;Walkley&quot;</bucket>
              <bucket>&quot;Shiregreen and Brightside&quot;</bucket>
              <bucket>&quot;Hillsborough&quot;</bucket>
              <bucket>&quot;Park and Arbourthorne&quot;</bucket>
              <bucket>&quot;Woodhouse&quot;</bucket>
              <bucket>&quot;Nether Edge and Sharrow&quot;</bucket>
              <bucket>&quot;Gleadless Valley&quot;</bucket>
              <bucket>&quot;Broomhill and Sharrow Vale&quot;</bucket>
              <bucket>&quot;Southey&quot;</bucket>
              <bucket>&quot;Firth Park&quot;</bucket>
              <bucket>&quot;Darnall&quot;</bucket>
              <bucket>&quot;Manor Castle&quot;</bucket>
              <bucket>&quot;Burngreave&quot;</bucket>
              <bucket>&quot;City&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]'>
            <groupfilter function='member' level='[none:City (DimLocation):nk]' member='&quot;Sheffield&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Anti-social behaviour&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Bicycle theft&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Burglary&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Criminal damage and arson&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Drugs&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Other crime&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Other theft&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Possession of weapons&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Public order&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Robbery&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Shoplifting&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Theft from the person&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Vehicle crime&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Violence and sexual offences&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2015' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2016' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2017' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:1]' value='90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</rows>
        <cols>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:1]</cols>
      </table>
      <simple-id uuid='{57C7C650-D6E0-4BDF-AFA4-F15CFDCA63BB}' />
    </worksheet>
    <worksheet name='Crime in area by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_areas_SY+ (Datamart_v3)' name='federated.0maznrw0foamlw14srkjs1rkaap3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0maznrw0foamlw14srkjs1rkaap3'>
            <column datatype='string' name='[Area (DimLocation)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
                <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
                <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
                <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
                <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
                <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
                <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
                <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
                <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
                <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
                <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
                <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
                <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
                <semantic-value key='&quot;Woodhouse&quot;' value='53.372945000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
                <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
                <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
                <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
                <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
                <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
                <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
                <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
                <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
                <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
                <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
                <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
                <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
                <semantic-value key='&quot;Woodhouse&quot;' value='-1.387972' />
              </semantic-values>
            </column>
            <column datatype='string' name='[City (DimLocation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[CrimeType]' role='dimension' type='nominal' />
            <column datatype='string' name='[Crimetype]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[TimeID (DimTime)]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Year (DimTime)]' role='dimension' type='ordinal' />
            <column-instance column='[Area (DimLocation)]' derivation='Attribute' name='[attr:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Area (DimLocation)]' derivation='Count' name='[cnt:Area (DimLocation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[TimeID (DimTime)]' derivation='Month' name='[mn:TimeID (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Area (DimLocation)]' derivation='None' name='[none:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[City (DimLocation)]' derivation='None' name='[none:City (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[CrimeType]' derivation='None' name='[none:CrimeType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (DimTime)]' derivation='None' name='[none:Year (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Crimetype]' derivation='Count' name='[pcto:cnt:Crimetype:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.0maznrw0foamlw14srkjs1rkaap3].[mn:TimeID (DimTime):ok]' />
                <order field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0maznrw0foamlw14srkjs1rkaap3].[mn:TimeID (DimTime):ok]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>2</bucket>
              <bucket>1</bucket>
              <bucket>12</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>8</bucket>
              <bucket>9</bucket>
              <bucket>11</bucket>
              <bucket>6</bucket>
              <bucket>5</bucket>
              <bucket>7</bucket>
              <bucket>10</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beauchief and Greenhill&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beighton&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Birley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Broomhill and Sharrow Vale&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Burngreave&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;City&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Crookes and Crosspool&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Darnall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Dore and Totley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;East Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Ecclesall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Firth Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Fulwood&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Gleadless Valley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Graves Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Hillsborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Manor Castle&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Mosborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Nether Edge and Sharrow&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Park and Arbourthorne&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Shiregreen and Brightside&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Southey&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stannington&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stocksbridge and Upper Don&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Walkley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;West Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Woodhouse&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Fulwood&quot;</bucket>
              <bucket>&quot;Crookes and Crosspool&quot;</bucket>
              <bucket>&quot;Dore and Totley&quot;</bucket>
              <bucket>&quot;Stannington&quot;</bucket>
              <bucket>&quot;Ecclesall&quot;</bucket>
              <bucket>&quot;West Ecclesfield&quot;</bucket>
              <bucket>&quot;Stocksbridge and Upper Don&quot;</bucket>
              <bucket>&quot;Beighton&quot;</bucket>
              <bucket>&quot;Graves Park&quot;</bucket>
              <bucket>&quot;Mosborough&quot;</bucket>
              <bucket>&quot;Birley&quot;</bucket>
              <bucket>&quot;Richmond&quot;</bucket>
              <bucket>&quot;East Ecclesfield&quot;</bucket>
              <bucket>&quot;Beauchief and Greenhill&quot;</bucket>
              <bucket>&quot;Walkley&quot;</bucket>
              <bucket>&quot;Shiregreen and Brightside&quot;</bucket>
              <bucket>&quot;Hillsborough&quot;</bucket>
              <bucket>&quot;Park and Arbourthorne&quot;</bucket>
              <bucket>&quot;Woodhouse&quot;</bucket>
              <bucket>&quot;Nether Edge and Sharrow&quot;</bucket>
              <bucket>&quot;Gleadless Valley&quot;</bucket>
              <bucket>&quot;Broomhill and Sharrow Vale&quot;</bucket>
              <bucket>&quot;Southey&quot;</bucket>
              <bucket>&quot;Firth Park&quot;</bucket>
              <bucket>&quot;Darnall&quot;</bucket>
              <bucket>&quot;Manor Castle&quot;</bucket>
              <bucket>&quot;Burngreave&quot;</bucket>
              <bucket>&quot;City&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]'>
            <groupfilter function='member' level='[none:City (DimLocation):nk]' member='&quot;Sheffield&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Anti-social behaviour&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Bicycle theft&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Burglary&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Criminal damage and arson&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Drugs&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Other crime&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Other theft&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Possession of weapons&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Public order&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Robbery&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Shoplifting&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Theft from the person&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Vehicle crime&quot;' />
              <groupfilter function='member' level='[none:CrimeType:nk]' member='&quot;Violence and sexual offences&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2015' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2016' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2017' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:10]' value='90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0maznrw0foamlw14srkjs1rkaap3].[mn:TimeID (DimTime):ok]</rows>
        <cols>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:10]</cols>
      </table>
      <simple-id uuid='{710805EE-6D57-4898-BEB5-072F28CC0CD5}' />
    </worksheet>
    <worksheet name='Demographic Map Area'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_areas_SY+ (Datamart_v3)' name='federated.0maznrw0foamlw14srkjs1rkaap3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0maznrw0foamlw14srkjs1rkaap3'>
            <column caption='Area (Areas Sheffield Dem)' datatype='string' name='[Area (Areas_Sheffield_Dem)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
                <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
                <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
                <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
                <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
                <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
                <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
                <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
                <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
                <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
                <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
                <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
                <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
                <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
                <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
                <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
                <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
                <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
                <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
                <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
                <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
                <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
                <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
                <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
                <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Area (DimLocation)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
                <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
                <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
                <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
                <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
                <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
                <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
                <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
                <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
                <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
                <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
                <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
                <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
                <semantic-value key='&quot;Woodhouse&quot;' value='53.372945000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
                <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
                <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
                <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
                <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
                <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
                <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
                <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
                <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
                <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
                <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
                <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
                <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
                <semantic-value key='&quot;Woodhouse&quot;' value='-1.387972' />
              </semantic-values>
            </column>
            <column datatype='string' name='[City (DimLocation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Crimetype]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Households]' role='measure' type='quantitative' />
            <column datatype='integer' datatype-customized='true' name='[Month (DimTime)]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sq area]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year (DimTime)]' role='dimension' type='ordinal' />
            <column-instance column='[Area (DimLocation)]' derivation='Attribute' name='[attr:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Households]' derivation='Avg' name='[avg:Households:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sq area]' derivation='Avg' name='[avg:Sq area:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area (DimLocation)]' derivation='Count' name='[cnt:Area (DimLocation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area (Areas_Sheffield_Dem)]' derivation='None' name='[none:Area (Areas_Sheffield_Dem):nk]' pivot='key' type='nominal' />
            <column-instance column='[Area (DimLocation)]' derivation='None' name='[none:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[City (DimLocation)]' derivation='None' name='[none:City (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Crimetype]' derivation='None' name='[none:Crimetype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month (DimTime)]' derivation='None' name='[none:Month (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year (DimTime)]' derivation='None' name='[none:Year (DimTime):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beauchief and Greenhill&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beighton&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Birley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Broomhill and Sharrow Vale&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Burngreave&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;City&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Crookes and Crosspool&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Darnall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Dore and Totley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;East Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Ecclesall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Firth Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Fulwood&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Gleadless Valley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Graves Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Hillsborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Manor Castle&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Mosborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Nether Edge and Sharrow&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Park and Arbourthorne&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Shiregreen and Brightside&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Southey&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stannington&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stocksbridge and Upper Don&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Walkley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;West Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Woodhouse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]'>
            <groupfilter function='member' level='[none:City (DimLocation):nk]' member='&quot;Sheffield&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Anti-social behaviour&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Bicycle theft&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Burglary&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Criminal damage and arson&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Drugs&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Other crime&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Other theft&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Possession of weapons&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Public order&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Robbery&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Shoplifting&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Theft from the person&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Vehicle crime&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Violence and sexual offences&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]'>
            <groupfilter function='member' level='[none:Month (DimTime):ok]' member='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2015' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2016' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2017' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' field-type='quantitative' max='-138512.05502411077' min='-186015.6566026035' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' field-type='quantitative' max='7065341.5356214447' min='7037663.2853792338' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0maznrw0foamlw14srkjs1rkaap3].[avg:Sq area:qk]' />
              <text column='[federated.0maznrw0foamlw14srkjs1rkaap3].[avg:Households:qk]' />
              <text column='[federated.0maznrw0foamlw14srkjs1rkaap3].[avg:Population:qk]' />
              <color column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (Areas_Sheffield_Dem):nk]' />
              <text column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]</rows>
        <cols>[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{AD12F149-97AE-4E3C-9808-AFC1512FC8A2}' />
    </worksheet>
    <worksheet name='Map Area Total'>
      <table>
        <view>
          <datasources>
            <datasource caption='crime_areas_SY+ (Datamart_v3)' name='federated.0maznrw0foamlw14srkjs1rkaap3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0maznrw0foamlw14srkjs1rkaap3'>
            <column datatype='string' name='[Area (DimLocation)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='53.322873999999999' />
                <semantic-value key='&quot;Beighton&quot;' value='53.350017999999999' />
                <semantic-value key='&quot;Birley&quot;' value='53.346342999999997' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='53.375537000000001' />
                <semantic-value key='&quot;Burngreave&quot;' value='53.401418' />
                <semantic-value key='&quot;City&quot;' value='53.371488999999997' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='53.384985' />
                <semantic-value key='&quot;Darnall&quot;' value='53.387656' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='53.316443999999997' />
                <semantic-value key='&quot;Firth Park&quot;' value='53.410319999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='53.345858999999997' />
                <semantic-value key='&quot;Graves Park&quot;' value='53.336506' />
                <semantic-value key='&quot;Hillsborough&quot;' value='53.421298999999998' />
                <semantic-value key='&quot;Manor Castle&quot;' value='53.380066999999997' />
                <semantic-value key='&quot;Mosborough&quot;' value='53.319431000000002' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='53.354739000000002' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='53.370592000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='53.355296000000003' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='53.423419000000003' />
                <semantic-value key='&quot;Southey&quot;' value='53.433383999999997' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='53.419654000000001' />
                <semantic-value key='&quot;Walkley&quot;' value='53.391986000000003' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='53.464694999999999' />
                <semantic-value key='&quot;Woodhouse&quot;' value='53.372945000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Beauchief and Greenhill&quot;' value='-1.4844550000000001' />
                <semantic-value key='&quot;Beighton&quot;' value='-1.3413250000000001' />
                <semantic-value key='&quot;Birley&quot;' value='-1.395969' />
                <semantic-value key='&quot;Broomhill and Sharrow Vale&quot;' value='-1.4987159999999999' />
                <semantic-value key='&quot;Burngreave&quot;' value='-1.462029' />
                <semantic-value key='&quot;City&quot;' value='-1.4708680000000001' />
                <semantic-value key='&quot;Crookes and Crosspool&quot;' value='-1.5097149999999999' />
                <semantic-value key='&quot;Darnall&quot;' value='-1.421591' />
                <semantic-value key='&quot;Dore and Totley&quot;' value='-1.5137579999999999' />
                <semantic-value key='&quot;Firth Park&quot;' value='-1.4627889999999999' />
                <semantic-value key='&quot;Gleadless Valley&quot;' value='-1.446461' />
                <semantic-value key='&quot;Graves Park&quot;' value='-1.459076' />
                <semantic-value key='&quot;Hillsborough&quot;' value='-1.5185219999999999' />
                <semantic-value key='&quot;Manor Castle&quot;' value='-1.465365' />
                <semantic-value key='&quot;Mosborough&quot;' value='-1.3549610000000001' />
                <semantic-value key='&quot;Nether Edge and Sharrow&quot;' value='-1.4844470000000001' />
                <semantic-value key='&quot;Park and Arbourthorne&quot;' value='-1.4573069999999999' />
                <semantic-value key='&quot;Richmond&quot;' value='-1.3961429999999999' />
                <semantic-value key='&quot;Shiregreen and Brightside&quot;' value='-1.4284950000000001' />
                <semantic-value key='&quot;Southey&quot;' value='-1.4955670000000001' />
                <semantic-value key='&quot;Stocksbridge and Upper Don&quot;' value='-1.5883879999999999' />
                <semantic-value key='&quot;Walkley&quot;' value='-1.4986729999999999' />
                <semantic-value key='&quot;West Ecclesfield&quot;' value='-1.488011' />
                <semantic-value key='&quot;Woodhouse&quot;' value='-1.387972' />
              </semantic-values>
            </column>
            <column datatype='string' name='[City (DimLocation)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Crimetype]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year (DimTime)]' role='dimension' type='ordinal' />
            <column-instance column='[Area (DimLocation)]' derivation='Attribute' name='[attr:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Area (DimLocation)]' derivation='Count' name='[cnt:Area (DimLocation):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Area (DimLocation)]' derivation='None' name='[none:Area (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[City (DimLocation)]' derivation='None' name='[none:City (DimLocation):nk]' pivot='key' type='nominal' />
            <column-instance column='[Crimetype]' derivation='None' name='[none:Crimetype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (DimTime)]' derivation='None' name='[none:Year (DimTime):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Crimetype]' derivation='Count' name='[pcto:cnt:Crimetype:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Area (DimLocation)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beauchief and Greenhill&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Beighton&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Birley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Broomhill and Sharrow Vale&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Burngreave&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;City&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Crookes and Crosspool&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Darnall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Dore and Totley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;East Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Ecclesall&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Firth Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Fulwood&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Gleadless Valley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Graves Park&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Hillsborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Manor Castle&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Mosborough&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Nether Edge and Sharrow&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Park and Arbourthorne&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Richmond&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Shiregreen and Brightside&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Southey&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stannington&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Stocksbridge and Upper Don&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Walkley&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;West Ecclesfield&quot;' />
              <groupfilter function='member' level='[none:Area (DimLocation):nk]' member='&quot;Woodhouse&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]'>
            <groupfilter function='member' level='[none:City (DimLocation):nk]' member='&quot;Sheffield&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Anti-social behaviour&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Bicycle theft&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Burglary&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Criminal damage and arson&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Drugs&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Other crime&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Other theft&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Possession of weapons&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Public order&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Robbery&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Shoplifting&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Theft from the person&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Vehicle crime&quot;' />
              <groupfilter function='member' level='[none:Crimetype:nk]' member='&quot;Violence and sexual offences&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2015' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2016' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2017' />
              <groupfilter function='member' level='[none:Year (DimTime):ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</column>
            <column>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' field-type='quantitative' max='-136537.40724467576' min='-183716.87930586876' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' field-type='quantitative' max='7064323.3557995129' min='7036575.2346508969' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Area (DimLocation):qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='break-on-special' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Area (DimLocation):nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]' />
              <color column='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]' />
              <text column='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]' />
              <text column='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0maznrw0foamlw14srkjs1rkaap3].[Latitude (generated)]</rows>
        <cols>[federated.0maznrw0foamlw14srkjs1rkaap3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1EDCD90D-9F0F-4EB7-870F-736E79F9A579}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type='layout-basic' w='73279' x='586' y='1042'>
              <zone h='57161' id='3' name='Demographic Map Area' show-title='false' w='54685' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30989' id='12' name='2015-18 Area Type of Crime Table by month' show-title='false' w='73279' x='586' y='58203'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9766' id='13' name='2015-18 Area Type of Crime Table by month' pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]' type='color' w='73279' x='586' y='89192'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='57161' id='15' name='Crime in area by month' w='18594' x='55271' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='349' h='97916' id='14' is-fixed='true' type='layout-basic' w='25549' x='73865' y='1042'>
              <zone h='97916' id='6' param='vert' type='layout-flow' w='25549' x='73865' y='1042'>
                <zone fixed-size='93' h='13151' id='8' is-fixed='true' name='Demographic Map Area' pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[avg:Sq area:qk]' type='size' w='25549' x='73865' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='653' h='84765' id='11' is-fixed='true' name='2015-18 crime by area' show-title='false' w='25549' x='73865' y='14193'>
                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{19BB6196-05C7-451B-9DFB-925311CA1DF5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map Area Total'>
      <cards>
        <edge name='left'>
          <strip size='176'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[diff:cnt:Area:ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C5595A03-E262-4AC0-B199-619AAEF0163D}' />
    </window>
    <window class='worksheet' name='Demographic Map Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[avg:Sq area:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (Areas_Sheffield_Dem):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[avg:Sq area:qk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[diff:cnt:Area:ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (Areas_Sheffield_Dem):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{679C3A31-13F8-4749-8AD6-C9D1112E2BE2}' />
    </window>
    <window class='worksheet' name='2015-18 crime by area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Crime Type:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[diff:cnt:Area:ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:1]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:2]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D0307FB6-F730-49B8-9C73-EA17986A9935}' />
    </window>
    <window class='worksheet' name='Crime in area by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Crime Type:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[diff:cnt:Area:ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[mn:TimeID (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crimetype:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:1]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:2]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[yr:TimeID (DimTime):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C6CA34DA-E98E-4C1D-8BCD-D174F0F59A60}' />
    </window>
    <window class='worksheet' name='2015-18 Area Type of Crime Table by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[attr:Crime Type:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[cnt:Crimetype:qk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[diff:cnt:Area:ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[mn:TimeID (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (Areas_Sheffield_Dem):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:City (DimLocation):nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Crime Type:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Month (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Sq area:ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:TimeID (DimTime):qk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Year (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:12]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:1]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:4]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[tmn:TimeID (DimTime):ok]</field>
            <field>[federated.0maznrw0foamlw14srkjs1rkaap3].[yr:TimeID (DimTime):ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5036137D-F37A-4574-A144-0F5D45D395CA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='2015-18 Area Type of Crime Table by month'>
          <zoom type='entire-view' />
          <highlight field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:CrimeType:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='2015-18 crime by area'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0maznrw0foamlw14srkjs1rkaap3].[pcto:cnt:Crimetype:qk:1]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Crime in area by month'>
          <highlight field='[federated.0maznrw0foamlw14srkjs1rkaap3].[none:Area (DimLocation):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Demographic Map Area'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A6D9F811-0F4B-4CD5-8C25-7F90880C042D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2015-18 Area Type of Crime Table by month' width='192'>
      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
      il889QwP3XfntMYlGovx018+SU1lMbfcuGtesbWSJPP7198iEo2wZX0dPr+firIyLBbLjEmw
      EAJ/IMi///JJcnOsFBfaOHjkOP/961+e5qYiSRJvvXeQxtZTPPrIg2g0atJUKrRaHcebWtnz
      zj421Ndy445taNLVMxpWIQTRWIy+QQddPX309A3gcrvZunEdd968c2rNZUkFIMsyJ5pb6enr
      586bd01F/keiURpb2nC5xqiuKKeivBz5jGej0+2jobGVm67fzo6tG9nz9j56Bwb53CcfntZC
      CSH49dMvkJudhdVsoHb1arp6esi0WCgqnGliFULgGh+nsamZju4+6mtrMJkMCFmeahE3rFs3
      52QxlUrhdI0z6BhGllKMu92kBJiMRqyZmZQU2bFmZk4TwOneXjQaDXabDUmS+NVvniORSPKF
      Rz+KSqUilUpxsqWNjp7T1K2qJj83lyyLeUHRUiNOF7986hlu27WDLRvWEo3G+N5PfkEylaJ2
      VRWNrR187MF7qVtdjcfr419+/B9UlRdx+007Z11UmotEIsmvn3kBg17HQx+6izSVapppeVIA
      jhEnv3tlD4EzG3QolUrS0lSMjI5hsZgxGvRUlBZTWVZMtjWLZ17cTVamhQfvvWNW/614IsHb
      +w7RcLIZpWLiGxn0OowGAxpNOo4RJyAoKbRTVVFGkT2fp198hc987KFpK91LKoDh4WFGx8bw
      +f3EEwkKbbaJzF9uD64zqS3W163hVGcP//SDf+fhB+4lO8tEob2Qdw810NLeRWVZMZ/8g/tn
      HXIkkkle3v061ZXl1NWunvDV6exErVZTXlY2VZlTqRTdPT28s/8wI043D91/N3W1NTOud6HD
      p4lWLUBzSytHTzaTm5PLzuu2UFJUOE0AyWSSk42N1NfV8/Nf/QaDQc/NO6/D5fYSjUXp6Omh
      t28Ivd5AWpqKTz/8APaCuVdmna5xnn5hN+FIlDSVCoVSMWXe9QdDPPbRBym05U8bv4+7Pbx3
      8CgHjxzHHwrzobtuYf/Bo9x/923otGrWrV17QebdeCLBieY23nrvIDu2bOTGHVtnfV+TAkim
      UgQCQTIyTNNcJ4QQKBQKfP4APX0DdPcOMDQ8wm27drBujvQyH3zvk//Lskw4EiUUjhCLxcjP
      y0V/Jv/TyJiLt/cdpMhewK7t071Bl1QA7Z097DvcwOiYi+ysTGz52VO+Mfl5uWzdsJ5gKMzf
      fedHfOXzn+L1t95l3O1h26Z6tm7aSCKZwmLOmHMIEAqHaW1t4+2Dx/n8Jx8mJzsLWZbp7esj
      Ho9TU11NKBymsamZE03trK1fww3XbbmgkD9ZlnGMOLHb8uesIKlUip7Tpzl45BhFhUXcetMN
      0wTg9vpoap5YsT56spVMi5n0dDUaTRob6tdQXVFOptmMVqvFMTLK879/nVVVFdx58w3ThiSJ
      ZJI33zlAU1sH9991KyVF9ikfpMl05Aa9fprX44yyShL9A0O88OqbBIMhrt+yllhSpqq8lLyc
      bPQ6HWp12oxhhcfrY9/hY7Se6mJVdQW7rtuCNdOyKL5AH7zPxS4cJpNJOnp6OXqyCZVSyfZN
      G6goK5kafk6ypAJ46dU3ybFmsb6+dmqy2tTWTjKZYvP6tQgh+OFPn2Dz+nqu3755IjLpeCPP
      vbibW3dt44brtqPX66cUH43GGBgaRqvVUFJkp6WtjZLiYlxuH//vmRew5+dRaC+gpNCGkFOE
      QkFGx1xoNHqu374Fg/7MOFChOOck1eX28NzLrzM65mLLhrXcc9vc3qpCCDweD8lUivy8vGkC
      +Ml//hqf38/amkq8wfCZYBwjNRXlFOTNnKskEknefO8ATa2neOhDd1FRWkx3bz/Pvfw6dauq
      uO3G69FoLj76q6e3l0gkSiAcY8gxwqhrnOiZYBKdRoNOp0Wn0xI/41e/Y+smNq6tRac9f4a9
      pUiOOyn8cDTK6Ng4A0MOuk73UVxoY+uGdeRYs+b8XksqgJ7efv79l0/ylc9/irJZ7PZvvrOf
      rp5evvTZT04rsNfn57kXX6GitJCUBMebWnF7fGg16dgK8vEHAhj1OkqLbVy3bSuZFjPJM2P0
      dw8c4Y29+9HptORYM///9s4rSLLzuu+/vn3v7e7bOU3OeWczkRYZhCCAAkkxSCXRLpdVfvCL
      yy9+cJWr/OhHl8su2aVgl2RZsmRZZcoUDZGEQIAgiEAsgc0zOzn2dM65+yY/9MxgFzvTvVhg
      dxbA/l+2avbr233v/U78zvkfGk0V1w0dYLpuEAr4efjsSU7NTt9UM6RpGv/ws7e5PLfAt37j
      BaYnRvmvf/7XnDg2zdM3pOva4UYB+A//5b/x1LlH6OsJoes6I8O3N2E9UdrtxAAAIABJREFU
      nkzx13/7CqqmI8sSv/Otl+np+uR0gAdp1mazyZWrVzl96tQtsYZhGNTqDWq1Vj8CcJNLdTv4
      pAJgmiaZXJ7AbRx0Fksl3j7/IdF4gkajiaI46AmH6OvpZmp89LYE9J4KwF6m5z/94Z/yT7/3
      3Zv87u1IlD/607/k3/7rf3lgVaRpmiwur1IuFWmoKg+fPYMsy/snfhcvXaJQrvPWO+dRFDvD
      gwNcnV8gFAjwzJOPcvrk7IG8lKZpEksk+eDSNeYWlgn4fTx0+gSSJPKj197k7KlZXnj2yX03
      qdFs8gd/8pc899RjnD1gllaj0eSHr76O3+vhhWefvEkADMPY//fi5cucOnHitrMthmEQiSUY
      6O1BEFobUNM05ubn8Xg8jAwfPsy69dzjbG5t7Z/iCrtWr6mqjA4P09V1eE/0p0EnAdA0jUQ6
      w+Z2hPWtCLl8AUEQ8Lhd/OZLLxxK2Lu8tsGrb77FM+ceZWx46CZr/klwJAdhmWyO//gHf8LX
      X3qecw+fRVU1/t2//31+7x//NhOj7bWiYRgkkkl2dnYYGBigKxxmY3MTWZbp7+vDNE2i8QQb
      mxFOnTiG2+W87Yei6zrReJIPL18jmy/wzRe/SugA81kqV/jD//6XfOflF5kcHwE+yln/nx/+
      hEfOnuLZJx5FFK2HngPEYjGqtRrjY3dGw6JpGvPXrxMKhahUq6jNJlOTkweUc7RioHq9vj/x
      Zy9eMEwT0zCQJOmuFeu1qwVaWl3n1Td/QXc4xMhgPyODAwT8PkSrlYXlVd545z2ee+Ics1Mf
      9S3ous7P3zvP5vYO33n5xU90FnAQjuwkuFgq8ft/9Gc89vAZorEEgYCfb7z0/G2/iGazyfrG
      BtVqFRM4c+rWuv+7iXQmxx//+V/zz/7Rdwn6/fz9az9jMxLle9/5xk3uyWECoOs6l65c4fix
      Y9g/Zqo7VajuNb8HA4H9Eo29mpeZmZl9069qGouLiyiKwsjw8JEMvj5IAEzT5NLcdT64dIXv
      ffsbhxfilcu88urrKIrC155/BlXV+MGP/4FwMMALzzz5mZAjHGkpRK1e5z//8Z+haRr/5l/9
      izt6QYViEdFqxelsz+xwN7ATi/Onf/V9rILAI2dP8fzT527JULU7CU4kkxQKBaYmJ1tFf+Uy
      uXyeXC6HYZoM9vcTDAZv+qxhGMxdv47f59unLN9DPp9neXWVyYkJbDYb89ev09fbS0/34TPD
      7jZuOQgD3j3/ISvrG/zOt77e0U83TZNfXbrC+YuXMU34taceb1vi/Ulx5LVAxi5txf08SO0w
      mKZJJBpHliW6QsEDN1k7AdiLBSRJotFo4FQU/D4ffr+/xW4RiVAql+nr7d0/0b6+uIjb5Trw
      cA9aJ9tz16+jaxrTU1N4PJ7Om1+t8Tff/7/YPSF+42u/jiRYqETnSSuzDPvgwoULLXezQ5yw
      fn2enpljOA4phzZMk9d+/jb5QpHvfv2l22aca5VOF7EIFnyfcUbpDhtiDDbWVnCH+gh6Xehq
      g2giQ193gLXNGGMjvVTq4HHZH8wI61ALVKvVMAwDh8NxiwXca6GMxmJkMhkEq5WA338oJcoe
      9uqWbrucoVnmf//wNdwOCYvs5NFxHwsbcZZyIoNhHzQLiKKIYtUo4+KZJx/l9Vd+QK5qMtTr
      poAXWyPF6kqcr5w7xi/f+YCT5x5h9fImL3zzawx2+9E0jVde+xlWq8DLv/bcXet5/qS4I7Vb
      SsewurtIRCMEvTPU63VSmQwuSw2j2eTy4jpupxu3s1Uvvxd0fVnR7t5v9P8PWifLMiPDwwz0
      91Mql/F5vR2vKeyeBt/2M2+R6vDI409z8fw7bG6V0AyJqWOzlKIrWM0WuVmpqTN7ehzQ0Cx2
      ulwGqqTw9COP8s7rP2Z0oJtkPMH06YcIue34Hn8Wj731OxKpND6Pm6cffxRhtz/6fsAdWYBC
      YpuaLUghsc30dCuVef36dabGh7l6ZY66aSHsc9M9PIVd0KlUKp9o6MEXCTc2xd+3MA1KlRpu
      l5NyPk08U6KnO8zm5ibjUzOo9SoADklgbSfF5PgIpWyCXA26/C5sDiflbIJEvs7ocA/LS6sM
      jY1iRURV6/e19b8zF8jQWFxYwB3qx2kT0JtV1jZ3GBmfxtTqOG0im/Es05PjYD5wge5lU/z9
      hvt9TOqRB8FfdHxRBGCvjDmTy5PKZElnsmTyeXL5AnabjGgVsVqF/cnwzz3xGH093XdNAHKJ
      bd5+/yLB/hHGB3ro7r4hQDeavP3uh5w6fQqPu5Ud/PC9t5k8ew6P/Wav//OXenmAe45mU+Wn
      b73DdjRGf2834WCAY1MTBPw+FLsdi6VVUrLXa63pOp4OhMOfFv7uQXyOBb7y0HH+7i/+Am/v
      GLNjXcwvbjASsPDeUoUPf/kuL3zrt+n3WvnpW7/EtDnQdCtCI0dRt9HnlR4IwAMcDtM0SaYz
      /ODH/8Ds1CT//J/87pEcpnXC0MQsdnTeOX+egC+Iyx3i7EMnMZNuZidaGbOHHjpDpZDn8ccf
      4633r+K0NkjljQcC8HmBruvsxBIM9n92QzDawTRN3r9wiQtX5/j2136dvp7OjHH3GoOjo4hY
      6O/vRcQk0OVlYS2GO9TPiO5CkMLMrWxxYnKYkZERZFlGtjsJOXQKmouxsa4HMcDdxqeNAUzT
      ZDsa49U33kI3DEYGB3jxuafuqiYuFEu88tobuJ1OXnr+mU81cON+D4IfWID7GOVKldd/8S7Z
      XJ5vvvRrhIMBfvzGz/nhq6/zzRef/8wPk1RV5f0Ll7hyfZHnHn+MYzcUoX1R8YWyAHuNMhvb
      O2xHo5w5MYu3g/a9HWrET4NPagH2Dg0vXpvnvQ8u8MQjD3Hm+LF9jW8YJm+8/S7pbI7f+sbX
      bqucYI/2ZWl1nYG+HrpCwZuayPcqM1//xbvMTI7z5CMPfepGmz3c7xbgcyMApmly9foiuq7j
      93nxuFy4XS4kSaTZbLK2uc21xSXiiRT9vT2EAn4WV9YQrAKnZ48xOzWBY7dHtFavE4nFWd+K
      sLG1zUBvD7/+7NN3PHa1HW57PgCQzeW5dG2e68srjAwO8PxTT+z3tX4c75z/kJWNTX73W18/
      lFG72VRZWFnl4tU5mqrK8EA/uXyBdDaHw2FnqL+Pnq4wF67MYbNJfO2rz+L1HPyeMtkcr77+
      FjPTE8xMjKEot8dk/UAAPgMB0DSNH73+cyrVKv093a3RN6UypUoZzJZwjAwOcHxmkoHeHqyi
      iIXd9sR8gctz11lcWUNRHDSbKoah09fTzejQIEP9fVyeu87CyhrfeflFQgcQ6B6GRrPJdjSG
      XZbpCocOZC9oJwB7xFfLaxtcujaPYZqcPn6M41OT2GxyR8t18eocF67McXJ2Grh5bSKZIhKL
      Mz4yxNmTx/fbAk3A0A3K1QpbkSg7sTgzk+MMD/Qf+n2rG1v8j//1fZ5/+nFiiRTLqxsoioMT
      x6Y4eWyK7q5QW16k2xUA02yNwiqXK7hczk9MlQ+Qyeb5/v/7CeceOcvJY1MdFc89FYDtnRiC
      INAdDrUls70R5UqF77/yE4YHB3jm3CM3BX/mx5iI20HXdVKZLE5FweVUbmn23opEeeWnb/Ds
      uUc5PnPrg9v7rnQmy+rGFhvbEcqVKgGft6W983ncLhfD/X2MDg3S0xVGksSPsUJo5AoFtqMx
      ItEYyVQGwzQYHRri7IljBzbftINpmmxu75BIp2/5P7/Xy+jQwKcaQL1HQPaj197k9773XXxe
      F16Pd79P+tr1Ja7NL5HN5/F7vYwM9TM+OszQQB9ulxNBENo2xJQrVVbXt9iOxojGEqTSGbAY
      dIUDZLIFHDaF6ckxjs9M7j/Pdl1vH16+xv/8mx9gYtJoNDl5bJrf/tZv0B0+fNzTPRWADy5e
      4Sevv0VTVZkcG+H0iRabsCwf3JEUT6b4279/lWefeIzjB9SAm6aJbhhgmvsCcKNfa5qgaiql
      UplSubRP5RcKBve5YW783kq1yg9+/Bo2WUbXDPw+Dy6nQr5UIpFMIYlWSuUKYyPDTIwO0x0O
      IUkSkiiiaTrzi8v8/L3zrG1s8dWnzvHtl1+8SQB+8OPXqFSrDPb3MtDbS1cogMNup1qrE4sn
      iSWSxBIpdmIJRKvAt7/+IkMDfYdaj0KxyOLKChaLBZ/Hi9frwet277eKfprMk2mavPerC1y4
      dJVzD5/C7XYhWkUMw2BwcAC77SPWPU3XSaezbGxH+NXFKzSbdX7rN19mZHDwJgHY6/e9eGWO
      y1evU63VmRwfaZEWWEy2IxEmx8c4PjPN+x9eIJcv4HF5mV9aIZlK09/bw+OPnGV2euKmUVGN
      RpO/+bsf8f6HFzlzcpbnnjxHIpXi/IUr7MTiPPfkOZ5/+vFbLIpp3uGEmE+CGwXgF788z/zi
      IlZBwDBNDN1AEsUWh4viwOt2Y7PJ2GQb9UaDn7/7PjOTY/i8HhqNJvV6HYfDjuJQSGdyXF9a
      JZZIYRgmXq+L0aEBRob6MU2DUqlMKpMlk83v8uaIiKJIvlhkoK+bgb4enIpCOBikuyuMz+vd
      N5/FcgmraCUcDBAOBkil0vSEA/h8XqyCQKFYJJnJkkxlME3weFw0Gk1SmRwBn48zJ49z+sQx
      nIpykwD86sIl1rciJJIZ8sVSqxdCN7DbbfR0hwkHA3jcThSHnXgyxQeXruH3evn6i88zPjq0
      308cTyZZWFrmyvwi6XQeVdMY7O9hdHgAh92GqmmIVisulwuP24XH7ca1O03+IGZnaLmZmVyO
      VDpDtVoB06TRaDA4MEBfXy+iVSKeTCJLEqlUArfbTW9P777iyeULfHjlMrlcgcH+fmanp24i
      x92KRPmzv/o+NpvM2ZOznDk5SzgUoFypcP7CBUwTHv3KWew2G8VyudU1du0asiQxPT5BrlBk
      aXWd+YVlKtUaT517iOHBPjRN45cfXCJXKPL0uUeYGB1GlCRkScIqCCytrvPTt97GqdhxORWq
      tTqqpqGpGoZp3FsBSKYzbO9EqdRqVGv1FttArYZm6Ii7825Fq4Cm6eTyBSxAs6nRVFWaTQ1d
      1xka6GVmcgyXU6FcqVDZbYl0Kg7cThcOh51oPMVWZIdQMEBPV5jeXQETrVai8SSvvvEWiVSG
      cw+fYai/h63IDsVSifWtHc6cOM5zTz2OIFjI5HLEYjEcdjv9N4wwqtVrJFMpcrkcoigzODCA
      3SaTKxTI5vLkC3m6wmEmx8ZuEoCtSIR0NkuhUKRcqSJJrRGmWKDZaALgdCq4nK3K2WKpRDKd
      JpnK0NfTzdjIEKvrG0TjKbweL8dnppieHKNWb3Dx8hwXr8xRrdeZnZog4PeyuR1hayeKIFjw
      uJ307rZq2u32fQY1SZIolytUa9UWq5thshmJMTk+Tn9vF5uRSGsEVjrLTiyJqmnYbTL9PSFm
      JsZwuz1EYnHWNjZJpLOIVpGucIiXvvoMvd1d+wKwvhXhR6/9jNnpCbrDQcqVCulMhkw2RzgU
      RHE4SGezZHMFVE3FJsu4nQoOux1JEvcZ55qqimFCrpBHtIpIsowsidRqdRrNBqbRYvUTrVYc
      djs2m4zT4UASRXRDB1pEAIViqTV26U4FoFatINkciFYB09Cp1hooip1arYHisKHpJqJovdkC
      vHee5fVNpsZHmRofJej37WsQTddJptLMLSyzuLpGoViipyvM8ZlJjk1O3DJY7+PYCyhzuSzF
      UglBELAKwv78WBP22Y9lSaJUqbU0R75Is6ny1OMPMzLYx/bODoZh4HG5sAgWgoEQqqaTzuaI
      JZIEfF68Hg8+rxuXU6FWq1EsFvF6PHR3d2GTb55JfFgQbO7W2NcbDayCgGyztdjdDqAt2Y5G
      uXj1KrVanaaqMT0+RndXmEy2wNLqOpquI4qtIrRarc7q+iaFYglJknA47Pi8bqZGh7DbJGRJ
      RtN1AERJwgKEAn5K5RLLa5uUKjUee+gM3eEQyXSWd85fYGJ0iPGRITLZLIJgodFskkxnMHSd
      iZFhBMFCqVyh2VTBYkGWZU7OzhIM+PcFIBZP8OrP3txtX1WwCgLpbI5qrY4sSdhkCadTIejz
      4vN6cLtc2Gz2fYswv7RMOBgkmUoyPDiAuEsl6bDbsQgCuqbTVJtUqjWqtSoOuwO/z4fP58Xj
      anXF6YaBYRpoqkqhWCSby92ZADSKaRa2UwgWKydnp9hYXqCp62i6QblcJ9jTjdcfIuRRbhKA
      pqqSzmRZWd9kcWWNYqnM0EAfgsXCRmSHgM/L8ekpJkaH91mR55dWWFxZY2JkkJGBPgRBaGkE
      UUIUW25No1GnWCwiyzb8Ph+SLFMsl/F5PPs9p4ZpUq83kKQW0/MeKW6tXkPTNOqNBvFkmkKx
      NVi50VCpN1WsgoBu6BiGjiSJGIaJpmkIgnU3IG9pFMkqMDMxyujQINV6k+5dy3OjALz9y/Nk
      83l0Q8dqEfY1myzLyLKMoih4PW7sNhu1Wp3NSITtaJR6vYHf50cSRRZW1pBEK1Pjo8iSSDqb
      RTeM/USA1WpFEsX9KfH9Pd3UGw22ozEKpTKyJOFUHLufaa2tN5q4XE5y+QLZfAFV1XA5HYwM
      DVAslXbPDaykMlkcdhvpTBaLIDAzOUFvVxf1eoNEOk0qnUaWREJ+HydmZwkGAvsCkM5mefOd
      96jX6wz19xL0+yiVKxSKRQSrFcFixWIVwGwpw1Z7qBe/14vf521NkimXCQdbLBipTJZkOkMm
      m6XRbKLrOpIo7jJcgCBY9+NAs5UqbNHB7D4nSRRbA9TvRACy0S0MTxfZ6BZTU1MsLS0xOdLL
      tYUNatUqTUPHJtk4efYryMJHQ/IWl5fJZrPY7DZ0TUfVNFRNRdd0goEALqdCNl9ga2cHVdXw
      uJx0d4UpFIsUimViu4xlLVepxdgsiRKqquJQHLicCvV6nXQ2h6pp2GQZu03GNFsEvM2mimmC
      LEs47HYcDhuKw0G5UiWdyWKYJl63m97uLrweN7l8nnqzid/jJeD34XK5yOXzROMJkuk0hmHg
      ciotVgPTpFiu4LDJhAJ+usJhTp84cZMAvPn222Ca2O02ypUaqWyWaq2O3Sbj29341VqNbL5A
      tVbHBGRRwuN24vO48Xk8aLqOYRjYdqnRLVgQrMK+MjAMc3/zl8tl7A6FrnAImyyjalpLs8ot
      d20nFicSi1MoFqnVG/vvt1arIwgCNlkmHAow2NeHx+2kVq8TCgRoqiqlcoVSuUK5UsFht+P1
      uPG63XjcLpzKR1Mi9wSgUqkQie7gVBQUxYmm6URicfKFIpIsYbfJ2G02bDYbsiRRrlTJFQrk
      8gXyhULLapkmDodjNzYLEg4G8HpaQf9B1vN2cEcCoDfKXJlfRvEE6Ql5qRWzxNJ5hsZnqOeT
      iJKVnXiWE6dOIlo+EoC1zS0WlldIpNI0Gg08HhfSbs4+FAwiyzKOXZ9NECyYWNB2g8RGo0ku
      n6epNjGMPV6b1os2jBbHjapq6Lvszpqm77cFGrt/+wh7pKrsugMmgkXY1RgGxu5a0Spit9ux
      yRKyLGOXbdjtMjabrfWy5NZLa6Xndj9vtMqCPS437t0gcE8AGo3GfhC6x8nTaKrUG3UajSaa
      piFLIvV6jWazicOhtGgJ7a2B2R9PAWu6TqVSRdf1Xa3XIglTVRVZlgkGgrddM3QjT5CqaQi7
      rsynPSH/+IikO7ne3m+z0J7G8k5wT4PgVCZDrd7A5/Fg3w3AoLUdb4eR+F7iIBrBO8EXpSHm
      TnG/nwTf1WK4Pe1bqVQwTRObJGGTJDANqtXqLdrJMIwDmRHgVs1x0Nr78fPVavVAYbrdzx/0
      t0/7+Xv5TKrV6m399qN6T3dVAPaCDqfT+aUthwa+1BYAuK8twJG396TjO2zvxNGMdp6YSToZ
      Y3t7m+3tbeqq1vaajUqBq/PLJBMJOvl3kUgE01DZjsTbrtPVKpFossPVWtja2tyPI9rDYHtj
      nWQ624EmRCe6e++RSAyjw1VzqTirm9skEp1+b4NIJEWzmiOeKbVdWUzFyFaaHa4HoLG5GbmN
      dVAr5Vnb2KRab3/dcjG3/+7zxUrbtaahM3/xErF0kobW/knFI5GjFwCX10spm+DqlYvEUoVD
      19kcClZagWunXV1IJckU8+xEY22XNqol1lZXWVhYRulgoSyCldjmKtfmFmjo7R+sXity6fJV
      EpnD72f3qvh8bnY2Vrl0+SrlunrIOhOH07V7ntFZsFKZLLlUnHjy1hqhG5HPpFhdXWZ1M47X
      ffAw7T1IdhtLVy+ytLLRQQAt5JNRrlybo1Rrv7Flh4JFqzM/d42Vje3DFwoiil2+LS4hXauS
      2EmwE41Sa6sodbbW146+IWZ7a5vJ2ZNIVlDVwx+tojjQdQG3W+mY2QgNDhPMl7B7g7RzPGyK
      m7GxMerVAuVyhaD38EZuQ1cpZ0v4+rppagY26+G/oak3kUUnpUIJR6id+TeIRNOceegRTEPD
      tBx2TSt2WcTW1YNNsra9J4DhoQGuzi0S7mk/68sX7GVsRCOXzVCpqzjkwwsKG+USdVPEYqod
      RNCkVq0QDPgolpu42xR05mIRnN3DjE7YUdXDhB8cDgVdN+gPhLAc+oxasEouxmaGyVUNnHK7
      7W1ldGLs6C2AQzS5fOUa0USuTT2+BatV4MqF8yyvrFFrtneBEhur+AbH6es6vApwD/VKHsHm
      wjT0tusEQUJxyaQzReQ2mx9AUZxk00lsHWvmLWi1InPXr1OoNm8Z33PjOovZ4P33z7O2vtXR
      BVpZ22R6ZgZ/B60OJulEHH8wgNbBXZAdCha9TrWhd9g0Ai6Xg0Qii1Np31SjeNwsX73MytoW
      1jZVq1arla2VeeYWlsjk27tqulqmULMwPjq0P0fhMJi6dvQCoGHF0BoUC53cBSujo8NYBCty
      h8YVp9dLZGWJ9a2djg5DIBhGMJo0O2wAsOD0+3HZ7Fg7PFhDFwiFA9huo55dsguUsznKtfZC
      LSteBnqCiDZ7x5fmskssLi0RS2U7rBTo6RugWshDh3sSBAGf14f9kAadGyHaFPweF1KHknet
      0UC3QLncflMDDAyNIApgd7R/poJVolbKsLS0QrODq+ry+o9eAHSsKLKI1kEDQ5NsUSWomGzF
      sm03tsPtZ3J8lGa93PH7TROwCB3OIQySsW2qqgXqFcptLFClVGAnkcbnc5GMdw6aRZsb0arv
      F8MdhvIuH2s9k6Ciam3vP9zbz8jwIKV8ruP3m6aBIElgHL5ZDF1lfXkZ2e2lnMu2tUC5TJxs
      sYFig3S2k7bWcLtdqB3uByASTzE23M/66jp6m4SJRZCYmJrCIZodlZqJefQCEPL78PgD+Ly+
      DitFnDZYWt2imG//EnRdo1Kp4HR5OvrLpVKBarVOrZyjfmgMYsHpDRF0S4ieAG7b4RZIlCR6
      wgGisTT+YKfuMgsel5tgVw9+X3siKYc3QCMXJ5pKk05l2q5Vmw0qlSqejs/UpJDPU29o5HLp
      QzehxSLQNzaFUUoT6htou2lsNhc+t0Sm0MDnbe8CKoEQQY+bQMDXcSOGfB4Wri9QLJWoNQ6P
      FzANqpUKguzo6Ko2quWjFwCX109vbx/ZdKLNKpNrly6iCzqSq5czxyc5zLhqao3NzQjVahWH
      09VZACoNpiZH0BsltqOHuQwW7JJJ3XBg09pbAJtdod7UOX36ND0hb4dvh2Coi74uN/FEOxew
      ycUL12jWS4wcO8tIX/eh91UpZInGU1SrVdzuTvl3HdWUGekPEN+IUTtklUWw0sgl8Q1NU0xG
      2yofxWXHtDg4ffoUbkf7GEC2KfT29lIrFdpeM7K2SKpYo1Q3eOLcw7gOva7B1voG5WoViyhj
      E9tv70K+cPQCkE0nSCaTjE9MtV03MTWNxRQw1ArVNhrAKtqZmplhZmaGRilHJ8dqeKCHuYV1
      RiZmGe4PHn5dyYFFK1PWBZQOvm29WmJjY6NjzhpM4rEo6ZLB5Gi74RMSU9NjWCUbhWyq7T0p
      Hj8zMzPMzBwjk4x2+H6JroCdzWSdhx87STt97Q6Gye1sICqejpumkEuzsbFJrdE+rqkW88ST
      SXqHRtpes3doDLddQhYtpHPFNistDI1NMDMzg99moVBrYymAgZHRo0+D5tNJcPhR1CbOQyXb
      gl1xMzU92zEXfOOJ6/jkZEcLIIgyvWEf0WSO2cnDNWZiZ5VkropLhrpuILUxrx63i1q9gaYb
      SB2Cy/hOhK7BEZpNDanN/fuCXfiCXZ/o/icnJ9quBRObw427FqNQNzlkICNgcP3yVYTuXmrF
      lrY+XAVYcSo2Go1Gx8NArVEmni4zJLUPrK2ixOj4BKPj47S/pIW92w8NHD41cw+GcR+cBHf3
      9pHPpKFDfncPn6QaUBCEjgLQqNep1puHjuPcQ7Crn+HhIcbHR7F1OIfQjQYWi0ix0E5bAVjo
      6+8hlcogdPBX9z9hsXS8pz3cTiVorVpBRcRpb9c8b2FoZIjBoTGGB/s7bBqTWqmIzSFRLDfa
      rlR8YSS9Sl3tZKc/+h2f6N13WKtpzaMXgK1IjDNnTxLZ3Lzn320aOpVqlXQ6i01uz54gWK1k
      kjE2NrZQ25ZtgKK4yGZS2JVODMkGyWyF2fEwW5H2ge3dgNZsUGvUyOWrSGK7zWJBFK1ENtaJ
      ROMdMjYCLreyew7QPmWZiazTM3mKUibe8Wzjs4dJrVo9WheonE+j6jrzc9dxeTsfWn3W2FxZ
      IN+0oBoWQv72AWOtUsep2HD6QihS+xhAkFw89eQI8XT7NGAyFkXXGiyuRukebB8D3Q3MX7uC
      5HJjlRRc9jYBq2nStAiIhkr/6GgHrWng7xlh3CNR1fRDjxd0tU6uplJemsNmV+65Ji7nEixt
      xI7WArh8IZx2EVOwod5Gzv6zxsjUcU4dm2ZypL9DcKWxthVncnoaNZ+k1OEkulrKsbS8gqq3
      15Vdvf2I1gayaKfYMWD+7HHqK48xOTpBd9BBuU3dTqOaI10ymJlr2MOEAAABvUlEQVSZJra5
      3iGxYCGTjLK2sQ1tXDCrZKfL56bU1LFbzXtuAVz+Hh5/9CtHKwCGYeDz+6mVsthdnVOGdwOC
      1Uqou5dwoJ0FsGKz6iwtLpKv6zg6pNfsdhGr6EDsdGJsgM/jI53NEWj7/XcPoiTTPzjcJrUI
      kqzQLGdYXFzCFG0dNo0FwdRweX20i1hN00Tx+LCZKk3EI9mIFovlaKkRN5eWCA6HySQNhgcP
      T0F+3rA4/wFb23mGJo/RG3If2g+wtLSEWxBwT0zwxRkhqPLeG29SE2RmTz2MIuoH9gNUCwmy
      NYl6Oc/ExNgR/M4WjjQGkG1W1pY3qVdNJBn6uj//QqDWyxgo9A44GRro3p+weBAsRpOdbBlZ
      VRkcGL6N4rX7H8VsDm9PP37RRpffSbl0sGtpFWWSO5s01ToIImNjQ0djBT4P5LifJyzMX2N8
      ehZBr7K0kaa/J/Cl6gi7du0qx4+foJSJkNc8+BTLfd0RduQHYV80uJ0Ky0uLWDBQPOGj/jn3
      HHbRwsLCAoau0T0YBNonDI4aDyzAXcYDVoj7mxXiyA/CHuABjhIPBOABvtR4IAAP8KXGAwF4
      gC81/j9TUYGsWa1cWQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2015-18 crime by area' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crime in area by month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Demographic Map Area' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Area Total' width='192'>
      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
      fW+WZeH/AZfcmefpiRgGAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
